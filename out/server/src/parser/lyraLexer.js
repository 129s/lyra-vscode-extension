"use strict";
// Generated from lyraLexer.g4 by ANTLR 4.9.0-SNAPSHOT
Object.defineProperty(exports, "__esModule", { value: true });
exports.lyraLexer = void 0;
const ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
const Lexer_1 = require("antlr4ts/Lexer");
const LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
const VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
const Utils = require("antlr4ts/misc/Utils");
class lyraLexer extends Lexer_1.Lexer {
    // @Override
    // @NotNull
    get vocabulary() {
        return lyraLexer.VOCABULARY;
    }
    // tslint:enable:no-trailing-whitespace
    constructor(input) {
        super(input);
        this._interp = new LexerATNSimulator_1.LexerATNSimulator(lyraLexer._ATN, this);
    }
    // @Override
    get grammarFileName() { return "lyraLexer.g4"; }
    // @Override
    get ruleNames() { return lyraLexer.ruleNames; }
    // @Override
    get serializedATN() { return lyraLexer._serializedATN; }
    // @Override
    get channelNames() { return lyraLexer.channelNames; }
    // @Override
    get modeNames() { return lyraLexer.modeNames; }
    static get _ATN() {
        if (!lyraLexer.__ATN) {
            lyraLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(lyraLexer._serializedATN));
        }
        return lyraLexer.__ATN;
    }
}
exports.lyraLexer = lyraLexer;
lyraLexer.ID = 1;
lyraLexer.NOTE = 2;
lyraLexer.EQUALS = 3;
lyraLexer.LBRACE = 4;
lyraLexer.RBRACE = 5;
lyraLexer.LPAREN = 6;
lyraLexer.RPAREN = 7;
lyraLexer.LBRACK = 8;
lyraLexer.RBRACK = 9;
lyraLexer.COLON = 10;
lyraLexer.COMMA = 11;
lyraLexer.METADATA = 12;
lyraLexer.COMMENT = 13;
lyraLexer.WS = 14;
lyraLexer.VALUE_NUMBER = 15;
lyraLexer.VALUE_SIGNATURE = 16;
lyraLexer.VALUE_ID = 17;
lyraLexer.VALUE_WS = 18;
lyraLexer.VALUE_MODE = 1;
// tslint:disable:no-trailing-whitespace
lyraLexer.channelNames = [
    "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
];
// tslint:disable:no-trailing-whitespace
lyraLexer.modeNames = [
    "DEFAULT_MODE", "VALUE_MODE",
];
lyraLexer.ruleNames = [
    "ID", "NOTE", "EQUALS", "LBRACE", "RBRACE", "LPAREN", "RPAREN", "LBRACK",
    "RBRACK", "COLON", "COMMA", "METADATA", "COMMENT", "WS", "VALUE_NUMBER",
    "VALUE_SIGNATURE", "VALUE_ID", "VALUE_WS",
];
lyraLexer._LITERAL_NAMES = [
    undefined, undefined, undefined, "'='", "'{'", "'}'", "'('", "')'", "'['",
    "']'", "':'", "','", "'@'",
];
lyraLexer._SYMBOLIC_NAMES = [
    undefined, "ID", "NOTE", "EQUALS", "LBRACE", "RBRACE", "LPAREN", "RPAREN",
    "LBRACK", "RBRACK", "COLON", "COMMA", "METADATA", "COMMENT", "WS", "VALUE_NUMBER",
    "VALUE_SIGNATURE", "VALUE_ID", "VALUE_WS",
];
lyraLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(lyraLexer._LITERAL_NAMES, lyraLexer._SYMBOLIC_NAMES, []);
lyraLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x14\x83\b\x01" +
    "\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06" +
    "\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f" +
    "\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04" +
    "\x12\t\x12\x04\x13\t\x13\x03\x02\x03\x02\x07\x02+\n\x02\f\x02\x0E\x02" +
    ".\v\x02\x03\x03\x03\x03\x07\x032\n\x03\f\x03\x0E\x035\v\x03\x03\x03\x07" +
    "\x038\n\x03\f\x03\x0E\x03;\v\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05" +
    "\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n" +
    "\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03" +
    "\x0E\x07\x0EW\n\x0E\f\x0E\x0E\x0EZ\v\x0E\x03\x0E\x03\x0E\x03\x0F\x06\x0F" +
    "_\n\x0F\r\x0F\x0E\x0F`\x03\x0F\x03\x0F\x03\x10\x06\x10f\n\x10\r\x10\x0E" +
    "\x10g\x03\x11\x06\x11k\n\x11\r\x11\x0E\x11l\x03\x11\x03\x11\x06\x11q\n" +
    "\x11\r\x11\x0E\x11r\x03\x12\x03\x12\x07\x12w\n\x12\f\x12\x0E\x12z\v\x12" +
    "\x03\x13\x06\x13}\n\x13\r\x13\x0E\x13~\x03\x13\x03\x13\x03\x13\x02\x02" +
    "\x02\x14\x04\x02\x03\x06\x02\x04\b\x02\x05\n\x02\x06\f\x02\x07\x0E\x02" +
    "\b\x10\x02\t\x12\x02\n\x14\x02\v\x16\x02\f\x18\x02\r\x1A\x02\x0E\x1C\x02" +
    "\x0F\x1E\x02\x10 \x02\x11\"\x02\x12$\x02\x13&\x02\x14\x04\x02\x03\n\x05" +
    "\x02C\\aac|\x06\x022;C\\aac|\x03\x0229\x04\x02%%dd\x04\x02--//\x04\x02" +
    "\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x03\x022;\x02\x8B\x02\x04\x03\x02" +
    "\x02\x02\x02\x06\x03\x02\x02\x02\x02\b\x03\x02\x02\x02\x02\n\x03\x02\x02" +
    "\x02\x02\f\x03\x02\x02\x02\x02\x0E\x03\x02\x02\x02\x02\x10\x03\x02\x02" +
    "\x02\x02\x12\x03\x02\x02\x02\x02\x14\x03\x02\x02\x02\x02\x16\x03\x02\x02" +
    "\x02\x02\x18\x03\x02\x02\x02\x02\x1A\x03\x02\x02\x02\x02\x1C\x03\x02\x02" +
    "\x02\x02\x1E\x03\x02\x02\x02\x03 \x03\x02\x02\x02\x03\"\x03\x02\x02\x02" +
    "\x03$\x03\x02\x02\x02\x03&\x03\x02\x02\x02\x04(\x03\x02\x02\x02\x06/\x03" +
    "\x02\x02\x02\b<\x03\x02\x02\x02\n@\x03\x02\x02\x02\fB\x03\x02\x02\x02" +
    "\x0ED\x03\x02\x02\x02\x10F\x03\x02\x02\x02\x12H\x03\x02\x02\x02\x14J\x03" +
    "\x02\x02\x02\x16L\x03\x02\x02\x02\x18N\x03\x02\x02\x02\x1AP\x03\x02\x02" +
    "\x02\x1CR\x03\x02\x02\x02\x1E^\x03\x02\x02\x02 e\x03\x02\x02\x02\"j\x03" +
    "\x02\x02\x02$t\x03\x02\x02\x02&|\x03\x02\x02\x02(,\t\x02\x02\x02)+\t\x03" +
    "\x02\x02*)\x03\x02\x02\x02+.\x03\x02\x02\x02,*\x03\x02\x02\x02,-\x03\x02" +
    "\x02\x02-\x05\x03\x02\x02\x02.,\x03\x02\x02\x02/3\t\x04\x02\x0202\t\x05" +
    "\x02\x0210\x03\x02\x02\x0225\x03\x02\x02\x0231\x03\x02\x02\x0234\x03\x02" +
    "\x02\x0249\x03\x02\x02\x0253\x03\x02\x02\x0268\t\x06\x02\x0276\x03\x02" +
    "\x02\x028;\x03\x02\x02\x0297\x03\x02\x02\x029:\x03\x02\x02\x02:\x07\x03" +
    "\x02\x02\x02;9\x03\x02\x02\x02<=\x07?\x02\x02=>\x03\x02\x02\x02>?\b\x04" +
    "\x02\x02?\t\x03\x02\x02\x02@A\x07}\x02\x02A\v\x03\x02\x02\x02BC\x07\x7F" +
    "\x02\x02C\r\x03\x02\x02\x02DE\x07*\x02\x02E\x0F\x03\x02\x02\x02FG\x07" +
    "+\x02\x02G\x11\x03\x02\x02\x02HI\x07]\x02\x02I\x13\x03\x02\x02\x02JK\x07" +
    "_\x02\x02K\x15\x03\x02\x02\x02LM\x07<\x02\x02M\x17\x03\x02\x02\x02NO\x07" +
    ".\x02\x02O\x19\x03\x02\x02\x02PQ\x07B\x02\x02Q\x1B\x03\x02\x02\x02RS\x07" +
    "1\x02\x02ST\x071\x02\x02TX\x03\x02\x02\x02UW\n\x07\x02\x02VU\x03\x02\x02" +
    "\x02WZ\x03\x02\x02\x02XV\x03\x02\x02\x02XY\x03\x02\x02\x02Y[\x03\x02\x02" +
    "\x02ZX\x03\x02\x02\x02[\\\b\x0E\x03\x02\\\x1D\x03\x02\x02\x02]_\t\b\x02" +
    "\x02^]\x03\x02\x02\x02_`\x03\x02\x02\x02`^\x03\x02\x02\x02`a\x03\x02\x02" +
    "\x02ab\x03\x02\x02\x02bc\b\x0F\x03\x02c\x1F\x03\x02\x02\x02df\t\t\x02" +
    "\x02ed\x03\x02\x02\x02fg\x03\x02\x02\x02ge\x03\x02\x02\x02gh\x03\x02\x02" +
    "\x02h!\x03\x02\x02\x02ik\t\t\x02\x02ji\x03\x02\x02\x02kl\x03\x02\x02\x02" +
    "lj\x03\x02\x02\x02lm\x03\x02\x02\x02mn\x03\x02\x02\x02np\x071\x02\x02" +
    "oq\t\t\x02\x02po\x03\x02\x02\x02qr\x03\x02\x02\x02rp\x03\x02\x02\x02r" +
    "s\x03\x02\x02\x02s#\x03\x02\x02\x02tx\t\x02\x02\x02uw\t\x03\x02\x02vu" +
    "\x03\x02\x02\x02wz\x03\x02\x02\x02xv\x03\x02\x02\x02xy\x03\x02\x02\x02" +
    "y%\x03\x02\x02\x02zx\x03\x02\x02\x02{}\t\b\x02\x02|{\x03\x02\x02\x02}" +
    "~\x03\x02\x02\x02~|\x03\x02\x02\x02~\x7F\x03\x02\x02\x02\x7F\x80\x03\x02" +
    "\x02\x02\x80\x81\b\x13\x04\x02\x81\x82\b\x13\x03\x02\x82\'\x03\x02\x02" +
    "\x02\x0E\x02\x03,39X`glrx~\x05\x07\x03\x02\b\x02\x02\x06\x02\x02";
//# sourceMappingURL=lyraLexer.js.map